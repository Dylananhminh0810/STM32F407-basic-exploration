#include <stdint.h>
#include "Register.h"
#include "RCC.h"
#include "GPIO.h"

typedef struct 
{
	uint32_t MODER;
	uint32_t OTYPER;
	uint32_t OSPEEDR;
	uint32_t PUPDR;
	uint32_t IDR;
	uint32_t ODR;
	uint32_t BSRR;
	uint32_t LCKR;
	uint32_t AFRL;
	uint32_t AFRH;
} GPIOGeneralRegister;

int main(){
	GPIOGeneralRegister* GPIOD;
	
	REG32(RCC_BASE_ADDRESS + RCC_AHB1_OFFSET) |= BIT_3;
	
	GPIOD = (GPIOGeneralRegister*)(GPIOD_BASE_ADDRESS);
	GPIOD->MODER |= BIT_24;
	GPIOD->OTYPER &= ~(uint32_t)BIT_12;
	GPIOD->OSPEEDR &= ~(uint32_t)(BIT_24 | BIT_25);
	GPIOD->PUPDR |= BIT_25;
	
	GPIOD->BSRR |= BIT_12;
	GPIOD->BSRR |= BIT_28;
	
	GPIOD->BSRR |= BIT_12;
	GPIOD->BSRR |= BIT_28;
	
	GPIOD->BSRR |= BIT_12;
	GPIOD->BSRR |= BIT_28;
	while(1){
	
	}
	
	return 0;
}